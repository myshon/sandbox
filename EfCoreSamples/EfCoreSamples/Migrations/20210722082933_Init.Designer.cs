// <auto-generated />
using System;
using EfCoreSamples;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EfCoreSamples.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    [Migration("20210722082933_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("EfCoreSamples.TestAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("TestAggregate");
                });

            modelBuilder.Entity("EfCoreSamples.TestAggregate", b =>
                {
                    b.OwnsOne("EfCoreSamples.Contracts.Audit", "Audit", b1 =>
                        {
                            b1.Property<Guid>("TestAggregateId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("CreatorId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime?>("Timestamp")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("timestamp without time zone")
                                .HasDefaultValue(new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc));

                            b1.Property<DateTimeOffset?>("Timestamp2")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("TestAggregateId");

                            b1.ToTable("TestAggregate");

                            b1.WithOwner()
                                .HasForeignKey("TestAggregateId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
